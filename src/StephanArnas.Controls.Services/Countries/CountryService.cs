using StephanArnas.Controls.Application.Common.Interfaces.Services;
using StephanArnas.Controls.Application.Countries;

namespace StephanArnas.Controls.Services.Countries;

public class CountryService : ICountryService
{
    public async Task<IReadOnlyList<CountryVm>> GetAllCountriesAsync(CancellationToken cancellationToken = default)
    {
        var countries = new List<CountryVm>
        {
            new (1, "France"),
            new (2, "United States"),
            new (3, "Japan"),
            new (4, "United Kingdom"),
            new (5, "Australia"),
            new (6, "Canada"),
            new (7, "Germany"),
            new (8, "Italy"),
            new (9, "Spain"),
            new (10, "Brazil"),
            new (11, "China"),
            new (12, "India"),
            new (13, "Mexico"),
            new (14, "Russia"),
            new (15, "South Korea"),
            new (16, "Netherlands"),
            new (17, "Sweden"),
            new (18, "Norway"),
            new (19, "Denmark"),
            new (20, "Finland"),
            new (21, "Argentina"),
            new (22, "Belgium"),
            new (23, "Chile"),
            new (24, "Colombia"),
            new (25, "New Zealand"),
            new (26, "South Africa"),
            new (27, "Ireland"),
            new (28, "Portugal"),
            new (29, "Greece"),
            new (30, "Turkey"),
            new (31, "Saudi Arabia"),
            new (32, "Israel"),
            new (33, "Poland"),
            new (34, "Switzerland"),
            new (35, "Austria"),
            new (36, "Hungary"),
            new (37, "Czech Republic"),
            new (38, "Ukraine"),
            new (39, "Vietnam"),
            new (40, "Thailand"),
            new (41, "Malaysia"),
            new (42, "Philippines"),
            new (43, "Indonesia"),
            new (44, "Singapore"),
            new (45, "Pakistan"),
            new (46, "Bangladesh"),
            new (47, "Sri Lanka"),
            new (48, "Nepal"),
            new (49, "Afghanistan"),
            new (50, "Kazakhstan"),
            new (51, "Uzbekistan"),
            new (52, "Azerbaijan"),
            new (53, "Armenia"),
            new (54, "Georgia"),
            new (55, "Morocco"),
            new (56, "Tunisia"),
            new (57, "Egypt"),
            new (58, "Kenya"),
            new (59, "Nigeria"),
            new (60, "Ghana"),
            new (61, "Ivory Coast"),
            new (62, "Senegal"),
            new (63, "Uganda"),
            new (64, "Ethiopia"),
            new (65, "Tanzania"),
            new (66, "Zambia"),
            new (67, "Zimbabwe"),
            new (68, "Algeria"),
            new (69, "Libya"),
            new (70, "Sudan"),
            new (71, "Angola"),
            new (72, "Mozambique"),
            new (73, "Botswana"),
            new (74, "Namibia"),
            new (75, "Madagascar"),
            new (76, "Mauritius"),
            new (77, "Seychelles"),
            new (78, "Malawi"),
            new (79, "Rwanda"),
            new (80, "Burundi"),
            new (81, "Mali"),
            new (82, "Niger"),
            new (83, "Chad"),
            new (84, "Central African Republic"),
            new (85, "Democratic Republic of the Congo"),
            new (86, "Republic of the Congo"),
            new (87, "Gabon"),
            new (88, "Equatorial Guinea"),
            new (89, "Sao Tome and Principe"),
            new (90, "Togo"),
            new (91, "Benin"),
            new (92, "Sierra Leone"),
            new (93, "Liberia"),
            new (94, "Cameroon"),
            new (95, "Burkina Faso"),
            new (96, "Lesotho"),
            new (97, "Eswatini"),
            new (98, "Somalia"),
            new (99, "Djibouti"),
            new (100, "Eritrea")
        };

        await Task.Delay(2000, cancellationToken);
        
        return countries.AsReadOnly();
    }
}